//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Collections.Generic;
    
    public partial class Lector : IEquatable<Lector>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Lector()
        {
            this.LibrosLectores = new HashSet<LibrosLectores>();
        }

        public Lector(int nCarnet, string nombre, string contrasena, string telefono, string email)
        {
            NCarnet = nCarnet;
            Nombre = nombre;
            Contrasena = contrasena;
            Telefono = telefono;
            Email = email;
        }

        public Lector(int nCarnet, string nombre, string contrasena, string telefono, string email, ICollection<LibrosLectores> librosLectores)
        {
            NCarnet = nCarnet;
            Nombre = nombre;
            Contrasena = contrasena;
            Telefono = telefono;
            Email = email;
            LibrosLectores = librosLectores;
        }

        public int NCarnet { get; set; }
        public string Nombre { get; set; }
        public string Contrasena { get; set; }
        public string Telefono { get; set; }
        public string Email { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LibrosLectores> LibrosLectores { get; set; }

        public override bool Equals(object obj)
        {
            return Equals(obj as Lector);
        }

        public bool Equals(Lector other)
        {
            return other != null &&
                   NCarnet == other.NCarnet;
        }

        public override int GetHashCode()
        {
            return -1113527304 + NCarnet.GetHashCode();
        }
    }
}
